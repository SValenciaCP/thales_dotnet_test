@model Thales.DotNet.Tech.Domain.Dto.EmployeeDto

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<p>
    <form asp-controller="Employee" asp-action="Details">
        <p>
            Emplyee Id: <input type="text" name="Id" />
            <input type="submit" value="Filter" />
        </p>
    </form>
</p>
@if (Model != null)
{
    <div>
        <h4>EmployeeDto</h4>
        <hr />
        <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Id)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.EmployeeName)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.EmployeeName)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.EmployeeSalary)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.EmployeeSalary)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.EmployeeAge)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.EmployeeAge)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.ProfileImage)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.ProfileImage)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.EmployeeAnualSalary)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.EmployeeAnualSalary)
            </dd>
        </dl>
    </div>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>
